% Исходные параметры (вариант 10)
T = 8;          % Длительность сигнала (с)
fd = 4096;      % Частота дискретизации (Гц)
df = 8;         % Требуемое разрешение (Гц)
E_target = 9;   % Желаемая ошибка (%)

% 1. Расчёт параметров алгоритма
N = T * fd;                     % Общее число отсчётов
k0 = 1;                         % Коэффициент для прямоугольного окна
M = 2^ceil(log2(fd/df * k0));   % Длина отрезка (512)
overlap = 0.5;                  % Перекрытие 50% для уменьшения ошибки
Sdvig = floor(M * (1 - overlap)); % Сдвиг (256)
V = floor((N - M)/Sdvig) + 1;   % Количество отрезков (128)
E = 1/sqrt(V) * 100;            % Фактическая ошибка (8.8%)

disp(['Параметры: M = ', num2str(M), ', V = ', num2str(V), ', E = ', num2str(E), '%']);

% 2. Генерация тестового сигнала
f1 = 300; f2 = 400;             % Частоты сигнала
t = (0:N-1)/fd;                 % Временная ось
x = sin(2*pi*f1*t) + sin(2*pi*f2*t) + 0.5*randn(1,N); % Сигнал + шум

% 3. График исходного сигнала (первые 100 мс)
figure;
subplot(2,1,1);
plot(t(1:round(0.1*fd)), x(1:round(0.1*fd)));
xlabel('Время (с)');
ylabel('Амплитуда');
title('Исходный сигнал (первые 100 мс)');
grid on;

% 4. Периодограмма Уэлча с прямоугольным окном
Pw = zeros(1, M);
w = ones(1, M);                 % Прямоугольное окно

for p = 1:V
    start_idx = (p-1)*Sdvig + 1;
    x_segment = x(start_idx : start_idx + M - 1) .* w;
    Pw = Pw + abs(fft(x_segment)).^2;
end

Pw = Pw / (V * M);              % Нормировка

% 5. График спектра (0 - fd/2 Гц)
subplot(2,1,2);
f = (0:M-1)/M * fd;
plot(f(1:M/2), 10*log10(Pw(1:M/2)));
xlabel('Частота (Гц)');
ylabel('Мощность (дБ)');
title('Спектральная плотность мощности (прямоугольное окно)');
grid on;

% 6. Общий заголовок
sgtitle(['Анализ сигнала: T = ', num2str(T), ' с, f_d = ', num2str(fd), ' Гц, df = ', num2str(df), ' Гц']);