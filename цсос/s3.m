%% 1. ДПФ по определению
N = 960;

% Количество операций по определению
A_opr = N*(N-1);  % комплексных сложений
M_opr = N*N;       % комплексных умножений

fprintf('1. ДПФ по определению для N=%d:\n', N);
fprintf('   Количество сложений: %d\n', A_opr);
fprintf('   Количество умножений: %d\n\n', M_opr);

%% 2. Алгоритм Кули-Тьюки
N1 = 32;
N2 = 30;

% Вычисление количества операций для алгоритма Кули-Тьюки
A_N2 = N2*(N2-1);  % для N2-точечного ДПФ
M_N2 = N2*N2;

A_N1 = N1*log2(N1); % для N1-точечного БПФ (степень двойки)
M_N1 = (N1/2)*log2(N1);

% Общее количество операций
A_kt = N1*A_N2 + N2*A_N1;
M_kt = N1*M_N2 + N2*M_N1 + N1*N2; % + поворачивающие множители

fprintf('2. Алгоритм Кули-Тьюки для N=%d=%d*%d:\n', N, N1, N2);

fprintf('Вычисление N_1 ДПФ длиной N_2 точек (внутренняя сумма):\n %d\n %d\n', N1*A_N2, N1*M_N2);
fprintf('Вычисление N_2 ДПФ длиной N_1 точек (внешняя сумма):\n %d\n %d\n', N2*A_N1, N2*M_N1);

%% 3. Граф БПФ для степени двойки
fprintf('3. 32-точечное БПФ с прореживанием:\n');
fprintf('Количество сложений: %d\n', A_N1);
fprintf('Количество умножений: %d\n\n', M_N1);

%% 4. Итоговые количества операций для КТ
fprintf('4. Итоговые количества операций для алгоритма Кули-Тьюки:\n');
fprintf('Общее количество сложений: %d\n', A_kt);
fprintf('Общее количество умножений: %d\n\n', M_kt);

%% 5. Сравнение эффективности
fprintf('5. Сравнение эффективности:\n');
fprintf('Отношение сложений (опр/КТ): %.2f\n', A_opr/A_kt);
fprintf('Отношение умножений (опр/КТ): %.2f\n', M_opr/M_kt);