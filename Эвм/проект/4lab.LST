Turbo Assembler	 Version 5.0	    10-24-24 20:54:31	    Page 1
4lab.asm



      1					 .386
      2	00000000			 .model	flat, stdcall
      3					 option	casemap:none
      4
      5					 ; РћРїСЂРµРґРµР»РµРЅРёРµ Р±Р°Р·РѕРІС‹С… С‚РёРїРѕРІ
      6					 HANDLE	equ DWORD
      7					 DWORD_PTR equ DWORD
      8					 ULONG_PTR equ DWORD
      9
     10					 ; РћРїСЂРµРґРµР»РµРЅРёРµ РєРѕРЅСЃС‚Р°РЅС‚
     11		  =0000			 NULL equ 0
     12		  =0001			 TRUE equ 1
     13		  =0000			 FALSE equ 0
     14
     15					 include windows.inc
1    16					 ; windows.inc
1    17					 ; Заголовочный	файл для Windows API
1    18
1    19					 ; Определения типов, констант и других	необходимых элементов
1    20					 ; Здесь могут быть определения	для HANDLE, DWORD и т.д.
1    21
1    22					 ; Пример экспорта
1    23					 extrn GetModuleHandleA:proc
1    24					 ; Добавьте другие необходимые функции и определения
     25					 include user.inc
1    26					 include windows.inc
2    27					 ; windows.inc
2    28					 ; Заголовочный	файл для Windows API
2    29
2    30					 ; Определения типов, констант и других	необходимых элементов
2    31					 ; Здесь могут быть определения	для HANDLE, DWORD и т.д.
2    32
2    33					 ; Пример экспорта
2    34					 extrn GetModuleHandleA:proc
2    35					 ; Добавьте другие необходимые функции и определения
1    36
1    37					 ; Экспортируемые функции
1    38					 extrn MessageBoxA:proc
1    39
1    40					 ; Псевдонимы для функций
1    41					 MessageBox equ	MessageBoxA
1    42
1    43					 ; Константы для MessageBox
1    44		  =0000			 MB_OK equ 0
1    45		  =0001			 MB_ICONINFORMATION equ	1
     46					 include kernel.inc
1    47
1    48					 include windows.inc
2    49					 ; windows.inc
2    50					 ; Заголовочный	файл для Windows API
2    51
2    52					 ; Определения типов, констант и других	необходимых элементов
2    53					 ; Здесь могут быть определения	для HANDLE, DWORD и т.д.
2    54
2    55					 ; Пример экспорта
2    56					 extrn GetModuleHandleA:proc
2    57					 ; Добавьте другие необходимые функции и определения
Turbo Assembler	 Version 5.0	    10-24-24 20:54:31	    Page 2
4lab.asm



1    58
1    59					 ; Экспортируемые функции
1    60					 extrn ExitProcess:proc
     61
     62					 includelib user32.lib
     63					 includelib kernel32.lib
     64
     65	00000000			 .data
     66	00000000  48 65	6C 6C 6F 2C 20+	     szMessage db "Hello, World!", 0
     67		  57 6F	72 6C 64 21 00
     68	0000000E  4D 79	20 4D 65 73 73+	     szTitle db	"My Message Box", 0
     69		  61 67	65 20 42 6F 78+
     70		  00
     71
     72	0000001D			 .code
     73	00000000			 start:
     74					     ; РџСЂРёРјРµСЂ РІС‹Р·РѕРІР° MessageBox
     75					     invoke MessageBox,	NULL, offset szMessage,	offset szTitle,	MB_OK
**Error** 4lab.asm(29) Illegal instruction
     76					     invoke ExitProcess, 0
**Error** 4lab.asm(30) Illegal instruction
     77
     78					 end start
Turbo Assembler	 Version 5.0	    10-24-24 20:54:31	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??date				  Text	 "10-24-24"
??filename			  Text	 "4lab	  "
??time				  Text	 "20:54:31"
??version			  Number 0500
@32Bit				  Text	 1
@CodeSize			  Text	 0
@Cpu				  Text	 0F0FH
@DataSize			  Text	 0
@FileName			  Text	 4lab
@Interface			  Text	 003h
@Model				  Text	 1
@WordSize			  Text	 4
@code				  Text	 FLAT
@curseg				  Text	 _TEXT
@data				  Text	 FLAT
@stack				  Text	 FLAT
DWORD_PTR			  Alias	 DWORD
ExitProcess			  Near32 ----:---- Extern
FALSE				  Number 0000
GetModuleHandleA		  Near32 ----:---- Extern
HANDLE				  Alias	 DWORD
MB_ICONINFORMATION		  Number 0001
MB_OK				  Number 0000
MessageBox			  Alias	 MessageBoxA
MessageBoxA			  Near32 ----:---- Extern
NULL				  Number 0000
TRUE				  Number 0001
ULONG_PTR			  Alias	 DWORD
start				  Near32 FLAT:0000
szMessage			  Byte	 FLAT:0000
szTitle				  Byte	 FLAT:000E

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  32  001D Dword  Public  DATA
FLAT				  Group
_TEXT				  32  0000 Dword  Public  CODE
Turbo Assembler	 Version 5.0	    10-24-24 20:54:31	    Page 4
Error Summary



**Error** 4lab.asm(29) Illegal instruction
**Error** 4lab.asm(30) Illegal instruction
