Turbo Assembler	 Version 4.1	    10/03/24 17:25:08	    Page 1
laba.asm



      1	0000			     _STACK  segment para stack
      2	0000  0400*(??)			     db	     1024 dup(?)
      3	0400			     _STACK  ends
      4
      5	0000			     data    segment
      6	0000  000A 0014	001E 0028 +	     array	 dw 10,	20, 30,	40, 50,	60, 70,	80 ; Исходный массив
      7	      0032 003C	0046 0050
      8	0010  0008			     count	 dw 8				   ; Количество элементов
      9	0012  08*(??)			     result	 db 8 dup(?)			   ; Массив результата
     10	001A  0000 0007			     bounds	 dw 0, 7			   ; Таблица границ: min =	0,  +
     11				     max = 7
     12	001E			     data    ends
     13
     14	0000			     code    segment byte public
     15					     assume  cs:code, ds:data, ss:_STACK
     16
     17	0000			     main:
     18					     ; Инициализация сегментного регистра данных
     19	0000  B8 0000s			     mov     ax, data
     20	0003  8E D8			     mov     ds, ax
     21
     22					     ; Инициализация индекса
     23	0005  33 C9			     xor     cx, cx				; Обнуляем cx для		    +
     24				     использования	как счетчика
     25	0007  BE 0000r			     lea     si, array				; Адрес исходного		    +
     26				     массива
     27	000A  BF 0012r			     lea     di, result				; Адрес результирующего +
     28				     массива
     29
     30	000D			     next_element:
     31	000D  3B 0E 0010r		     cmp     cx, count			       ; Проверяем, достигли ли  +
     32				     конца	массива
     33	0011  7D 12			     jge     end_processing			; Если да, переходим к	    +
     34				     завершению
     35
     36					     ; Проверяем, находится ли текущий индекс в	    +
     37				     пределах массива с	помощью BOUND
     38	0013  8B D9			     mov     bx, cx			       ; Загружаем текущий	    +
     39				     индекс в bx
     40					     bound   bx, bounds			       ; Проверка границ индекса
**Error** laba.asm(31) Illegal instruction for currently selected processor(s)
     41
     42					     ; Если	индекс в	пределах границ
     43	0015  C6 05 31			     mov     byte ptr [di], '1'		       ; Записываем '1' в		    +
     44				     результирующий массив
     45	0018  EB 04 90			     jmp     increment_index		       ; Переходим к увеличению +
     46				     индекса
     47
     48	001B			     not_in_bounds:
     49	001B  C6 05 30			     mov     byte ptr [di], '0'		       ; Записываем '0' в		    +
     50				     результирующий массив
     51
     52	001E			     increment_index:
     53	001E  41			     inc     cx					; Увеличиваем текущий	    +
     54				     индекс
     55	001F  83 C6 02			     add     si, 2				; Переход к следующему    +
     56				     элементу (2 байта для слова)
Turbo Assembler	 Version 4.1	    10/03/24 17:25:08	    Page 2
laba.asm



     57	0022  47			     inc     di					; Переход к следующему    +
     58				     элементу результирующего массива
     59	0023  EB E8			     jmp     next_element			; Переходим к	следующему+
     60				     элементу
     61
     62	0025			     end_processing:
     63					     ; Вывод результата
     64	0025  BE 0012r			     lea     si, result				; Адрес результирующего +
     65				     массива
     66	0028  8B 0E 0010r		     mov     cx, count				; Количество элементов   +
     67				     для вывода
     68
     69	002C			     print_result:
     70	002C  B4 02			     mov     ah, 02h			       ; Функция	вывода символа
     71	002E  8A 14			     mov     dl, [si]				; Загружаем байт из	    +
     72				     результирующего массива
     73	0030  CD 21			     int     21h				; Вызов DOS
     74	0032  46			     inc     si					; Переход к следующему    +
     75				     байту
     76	0033  E2 F7			     loop    print_result			; Повторяем, пока не	    +
     77				     выведем все элементы
     78
     79					     ; Завершение программы
     80	0035  B8 4C00			     mov     ax, 4C00h			       ; Завершение программы
     81	0038  CD 21			     int     21h				; Вызов DOS
     82	003A			     code    ends
     83				     end main
Turbo Assembler	 Version 4.1	    10/03/24 17:25:08	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "10/03/24"
??FILENAME			  Text	 "laba	  "
??TIME				  Text	 "17:25:08"
??VERSION			  Number 040A
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 LABA
@WORDSIZE			  Text	 2
ARRAY				  Word	 DATA:0000
BOUNDS				  Word	 DATA:001A
COUNT				  Word	 DATA:0010
END_PROCESSING			  Near	 CODE:0025
INCREMENT_INDEX			  Near	 CODE:001E
MAIN				  Near	 CODE:0000
NEXT_ELEMENT			  Near	 CODE:000D
NOT_IN_BOUNDS			  Near	 CODE:001B
PRINT_RESULT			  Near	 CODE:002C
RESULT				  Byte	 DATA:0012

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  003A Byte	  Public
DATA				  16  001E Para	  none
_STACK				  16  0400 Para	  Stack
Turbo Assembler	 Version 4.1	    10/03/24 17:25:08	    Page 4
Error Summary



**Error** laba.asm(31) Illegal instruction for currently selected processor(s)
