; Консольное приложение, создающее папку
include typefile.inc      
.386                      
.model FLAT,STDCALL     
.data                     
nameout db 'CONOUT$'     ; Имя устройства для вывода (консоль)
folderName db 100 dup(0) ; Буфер для имени создаваемой папки
.code                     
_start:                  
    call GetCommandLine  ; Получаем указатель на командную строку
    mov esi, eax         ; Сохраняем указатель на строку команд в регистре ESI
    xor ecx, ecx        ; Обнуляем счетчик параметров (ECX)
    mov edx, 1          ; Устанавливаем признак наличия параметра (EDX)(пробел)
    
n1:                     ; Метка для начала цикла обработки строки
    cmp byte ptr [esi], 0 ; Проверяем конец строки
    je end_                ; Если конец строки, переходим к завершению
    cmp byte ptr [esi], 32 ; Сравниваем текущий символ с пробелом
    je n3                  ; Если пробел, переходим к обработке пробела
    add ecx, edx          ; Увеличиваем счетчик параметров (ECX)
    cmp ecx, 2            ; Проверяем, является ли это вторым параметром
    je n4                  ; Если да, переходим к копированию имени папки
    xor edx, edx          ; Обнуляем признак наличия параметра
    jmp n2                ; Переходим к следующему символу

n3:                     ; Метка для обработки пробела
    or edx, 1            ; Устанавливаем признак наличия параметра
n2:                     ; Метка для следующего символа
    inc esi              ; Переходим к следующему символу в строке
    jmp n1               ; Возвращаемся к началу цикла

n4:                     ; Метка для начала копирования имени папки
    ; Копируем имя папки в буфер folderName
    mov edi, offset folderName ; Устанавливаем указатель на буфер для имени папки
    mov ecx, 100           ; Устанавливаем максимальную длину копируемой строки

copy_loop:              ; Метка для цикла копирования
    cmp byte ptr [esi], 0  ; Проверяем конец строки
    je create_directory     ; Если конец строки, переходим к созданию директории
    mov al, [esi]          ; Копируем текущий символ в AL
    stosb                  ; Сохраняем символ в буфер folderName
    inc esi                ; Переходим к следующему символу в строке
    jmp copy_loop          ; Возвращаемся к началу цикла копирования

create_directory:       ; Метка для создания директории
    ; Создаем директорию
    call CreateDirectory, offset folderName, 0 ; Вызываем функцию для создания директории
    cmp eax, 0            ; Проверяем результат выполнения функции
    jne success           ; Если результат не равен нулю, значит создание успешно

    ; Если создание директории не удалось, получаем ошибку
    call GetLastError     ; Получаем код последней ошибки
    ; можно добавить обработку ошибки, например вывести код ошибки на консоль
    jmp end_              ; Переходим к завершению

success:                ; Метка для успешного завершения
    ; Успешно создана папка (можно добавить сообщение об успехе)

end_:                  
    call ExitProcess, 0  ; Завершаем программу 
end _start             
