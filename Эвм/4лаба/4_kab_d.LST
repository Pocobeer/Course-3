Turbo Assembler	 Version 5.0	    09-20-24 09:29:33	    Page 1
4_kab_d.asm



      1					 .386
      2	00000000			 .model	flat
      3					 public	 PadCh
      4
      5	00000000			 .code
      6	00000000			 start@12:
      7	00000000  B0 01			 mov al,1
      8	00000002  C2 000C		 ret 12
      9
     10					 ;function PadCh(S: string; C: char; Len: byte): string,
     11					 ;Возвращает строку,  в которой	S смещена влево, а	    +
     12					 остаток	строки заполнен символами С.
     13					 ;Для этого знаки С включаются справа от конца S до  +
     14					 тех	пор	пока общая длина строки не
     15					 ;станет равной Len. Если S длиннее чем Len, то строка    +
     16					 не изменяется.
     17					 ;Если S пустая строка,	то возвращается строка из	Len +
     18					 символов С.
     19	00000005			 PadCh	 proc	near
     20					 ; адреса	параметров в	стеке:
     21		  = dword ptr [ebp+16]	 S	 equ	 dword ptr [ebp+16]	  ;  адрес	строки S:string
     22		  = byte  ptr [ebp+12]	 Ch1	 equ	 byte  ptr [ebp+12]	   ;  адрес параметра С :Char
     23		  = byte  ptr [ebp+8]	 Len	 equ	 byte  ptr [ebp+8]	  ;  адрес	параметра Len:Byte
     24		  = dword ptr [ebp+20]	 Res	 equ	 dword ptr [ebp+20]	  ;  адрес	строки результата
     25	00000005  55				 push	 ebp			  ; сохранение bp
     26	00000006  8B EC				 mov	 ebp,	  esp	   ; настройка	bp на	вершину стека
     27						 ;push	  ds		  ; сохранение ds
     28	00000008  8B 7D	14			 mov	 edi,	  [Res]	  ; es:di:=адрес результата
     29	0000000B  8B 75	10			 mov	 esi,	  [S]	  ; ds:si:=адрес исходной
     30									 ; строки
     31	0000000E  B9 00000000			 mov ecx,0
     32	00000013  FC				 cld			 ; очистка флага направления	    +
     33					 (инкремент)
     34	00000014  AC				 lodsb			 ; al:=(ds:[si]), si:=si+1 (al - длина S)
     35	00000015  AA				 stosb			 ; копируем длину строки S в Res
     36	00000016  8A E0				 mov	 ah,	 al	 ; сохраняем длину строки S
     37	00000018  3A 45	08			 cmp	 al,	 [Len]	 ; сравниваем	длину S с	Len
     38	0000001B  72 0D	90 90 90 90		 jb	Pad	   ; если S	>= Len,	то копируем S	и выходим
     39	00000021  8A C8				 mov cl, al
     40	00000023  F3> A4			 rep	 movsb
     41	00000025  EB 17	90 90 90		 jmp Exit
     42
     43	0000002A			  Pad:
     44
     45
     46	0000002A  8A 45	08			 mov al, [Len]
     47	0000002D  88 47	FF			 mov  [edi-1], al	 ; Дополняем строку
     48	00000030  8A CC				 mov cl, ah
     49	00000032  F3> A4			 rep	 movsb		 ; записать очередной символ	    +
     50					 результата Res
     51	00000034			 StoreLen:
     52	00000034  8A 4D	08			 mov cl, [Len]
     53	00000037  2A CC				 sub	 cl,	 ah	 ; S длиннее, чем Len
     54
     55	00000039  8A 45	0C			 mov	 al,	 [Ch1]	 ; добавляем очередной символ
     56						 ;Копируем строку
     57	0000003C  F3> AA			 rep	 stosb
Turbo Assembler	 Version 5.0	    09-20-24 09:29:33	    Page 2
4_kab_d.asm



     58
     59
     60	0000003E			 Exit:	; pop	  ds		  ; восстановить ds
     61	0000003E  5D				 pop	 ebp		  ; восстановить bp
     62	0000003F  C2 0010			 ret	 16		 ; выход с удалением параметров Ch1,
     63									 ; Ch2 и адреса S (Res удалять нельзя!)
     64	00000042			 PadCh	endp
     65
     66					 end start@12
Turbo Assembler	 Version 5.0	    09-20-24 09:29:33	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??date				  Text	 "09-20-24"
??filename			  Text	 "4_kab_d "
??time				  Text	 "09:29:33"
??version			  Number 0500
@32Bit				  Text	 1
@CodeSize			  Text	 0
@Cpu				  Text	 0F0FH
@DataSize			  Text	 0
@FileName			  Text	 4_kab_d
@Interface			  Text	 000h
@Model				  Text	 1
@WordSize			  Text	 4
@code				  Text	 FLAT
@curseg				  Text	 _TEXT
@data				  Text	 FLAT
@stack				  Text	 FLAT
Ch1				  Text	 byte  ptr [ebp+12]
Exit				  Near32 FLAT:003E
Len				  Text	 byte  ptr [ebp+8]
Pad				  Near32 FLAT:002A
PadCh				  Near32 FLAT:0005
Res				  Text	 dword ptr [ebp+20]
S				  Text	 dword ptr [ebp+16]
StoreLen			  Near32 FLAT:0034
start@12			  Near32 FLAT:0000

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  32  0000 Dword  Public  DATA
FLAT				  Group
_TEXT				  32  0042 Dword  Public  CODE
